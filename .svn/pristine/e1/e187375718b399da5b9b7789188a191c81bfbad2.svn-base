<!DOCTYPE html>
<html class="ui-page-login">

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<title></title>
		<link rel="stylesheet" href="css/mui.min.css">
		<link rel="stylesheet" type="text/css" href="css/app.css" />
		<link rel="stylesheet" type="text/css" href="css/myCss.css" />
		<link rel="stylesheet" type="text/css" href="css/reset.css" />
	</head>
	<style>
	#mask {       
        position: absolute;
        top:0px; 
        background-color:rgb(255,255,255);
        width: 100%;    
        height: 100%; 
        z-index: 1002;
        left: 0px;         
    }
	</style>
	<body class="fixed">
		<div class="login-wrapper">
			<div class="login-cover"></div>
			<!--<header class="i_header">
			<div class="header-left"></div>
				<center class="header-center">登录</center>
			</header>-->
			<div class="logo-wrapper"><img src="images/logo.png" alt="" /></div>
			<div class="tittle_wrapper">南通二建定向支付云</div>
			<div class="login-main">
				<form id='login-form' class="mui-input-group">
					<div class="mui-input-row">
						<label>账号</label>
						<input id='account' type="text" class="mui-input-clear mui-input" placeholder="请输入账号">
					</div>
					<div class="mui-input-row">
						<label>密码</label>
						<input id='password' type="password" class="mui-input-clear mui-input" placeholder="请输入密码">
					</div>
				</form>

				<div class="mui-content-padded">
					<button id='login' class="btn-logout mt30 mui-btn mui-btn-block mui-btn-primary">
						<a>登录</a>
					</button>
				</div>

				<div class="from-wrapper">
					<form class="mui-input-group">
						<ul class="mui-table-view mui-table-view-chevron">
							<li class="mui-table-view-cell">
								自动登录
								<div id="autoLogin" class="mui-switch">
									<div class="mui-switch-handle"></div>
								</div>
							</li>
						</ul>
					</form>

					<form class="mui-input-group">
						<ul class="mui-table-view mui-table-view-chevron">
							<li class="mui-table-view-cell">
								记住密码
								<div id="rempsd" class="mui-switch">
									<div class="mui-switch-handle"></div>
								</div>
							</li>
						</ul>
					</form>
				</div>
			</div>
			<div class="mui-content-padded oauth-area"></div>
			<div id="mask"style="height: 100%;width: 100%;">
				<div style="height: 200px;width: 200px;margin:0 auto;margin-top: 50%;background-color：red;text-align: center;">
					<p style="padding-bottom: 10px;"></p>
					<div id="demo1" class="mui-progressbar">
						<span></span>
					</div>
					     
				</div>
			</div>
		</div>

		<script src="js/mui.min.js"></script>
		<script type="text/javascript" src="js/common.js"></script>
		<script src="js/mui.enterfocus.js"></script>
		<!--<script type="text/javascript" src="js/push.js" ></script>-->
		<script type="text/javascript" src="js/md5.js"></script>
		<script type="text/javascript" src="js/jquery.js"></script>
		<script>
			/*********************(****个性推送****)*********************/
			document.addEventListener("plusready", function() {
				// 监听点击消息事件
				//IOS可监听到click事件，安卓不可以
				plus.push.addEventListener("click", function(msg) {
					//alert("login:进入Click事件");//没有触发click时间
					//alert(msg);
					var vData = JSON.stringify(msg);
					//alert(vData);
					var vInfo = plus.push.getClientInfo();
					//alert(vInfo);
					var vInfoData = JSON.stringify(vInfo);
					//alert(vInfoData);
					// 判断是从本地创建还是离线推送的消息
					switch(msg.payload) {
						case "LocalMSG":
							outSet("点击本地创建消息启动：");
							break;
						default:
							outSet("点击离线推送消息启动：");
							break;
					}
					// 提示点击的内容
					//跳转到list页面
					var usedAccountInfo = JSON.parse(plus.storage.getItem('usedAccountInfo'));
					var json = {"data":{"selectDatas":[{"queryMode":"custom","dataSource":"Query_WF_GetTaskDbAndCy","queryFrom":"NAME","selectExpression":"Query_WF_GetTaskDbAndCy","conditionParams":{"processName":{"paramName":"processName","paramValue":null},"state":{"paramName":"state","paramValue":"Running"},"procInstState":{"paramName":"procInstState","paramValue":"Running"},"executionState":{"paramName":"executionState","paramValue":"Running"},"loginUserId":{"paramName":"loginUserId","paramValue":"741476a7c5b178b2bedf1f062d17b26b"},"taskName":{"paramName":"taskName","paramValue":null}},"extraCondition":"1 = 1","recordStart":-1,"pageSize":-1}]}};
					json.data.selectDatas[0].conditionParams.loginUserId.paramValue=usedAccountInfo.userId;
					json.data.selectDatas[0].pageSize=15;
					json.data.selectDatas[0].recordStart=1;
					var jsonStr = encodeURI(JSON.stringify(json));
					$.ajax({
						type: 'POST',
						url: ip+"module-operation!executeOperation?moduleId=5de9264496ed421083f487f7dee1ac54",
						data: {
							  'moduleId':'5de9264496ed421083f487f7dee1ac54',
							  'operation':'Find',
							  'ajaxRequest':'true',
							  'token':jsonStr
						},
						success: function(result){
							 var param = result.data.resultDatas[0].datas
							  //console.log(JSON.stringify(result))
							  console.log(JSON.stringify(result.data.resultDatas[0].datas))
							  var listPage = mui.openWindow({
							  	url:'listParent.html',
							  	id:'listParent',
							  	extras:{
							  		listInfo:param,
							  		status:'daiban'
							  	},
							  	show: { //控制打开页面的类型
									autoShow: true,
									//页面loaded事件发生后自动显示，默认为true 
									aniShow: 'slide-in-right', //页面显示动画，默认为”slide-in-right“；  页面出现的方式 左右上下
									duration: '100' //页面动画持续时间，Android平台默认100毫秒，iOS平台默认200毫秒； 
								}
							  });
							},
							error:function(ms){
								mui.toast("网络出错");
							},
							dataType: "json"
						});	
					}, false);
				// 监听在线消息事件  推送通知的
				//安卓可监听到receive事件，IOS不可以
				plus.push.addEventListener("receive", function(msg) {
					getNum()//修改角标
					//alert("login:进入receive事件");
					//alert('login:'+JSON.stringify(msg))
					//alert(msg);
					var vData = JSON.stringify(msg);
					//alert(vData);
					var vInfo = plus.push.getClientInfo();
					//alert(vInfo);
					var vInfoData = JSON.stringify(vInfo);
					//跳转到list页面
					var usedAccountInfo = JSON.parse(plus.storage.getItem('usedAccountInfo'));
					var json = {"data":{"selectDatas":[{"queryMode":"custom","dataSource":"Query_WF_GetTaskDbAndCy","queryFrom":"NAME","selectExpression":"Query_WF_GetTaskDbAndCy","conditionParams":{"processName":{"paramName":"processName","paramValue":null},"state":{"paramName":"state","paramValue":"Running"},"procInstState":{"paramName":"procInstState","paramValue":"Running"},"executionState":{"paramName":"executionState","paramValue":"Running"},"loginUserId":{"paramName":"loginUserId","paramValue":"741476a7c5b178b2bedf1f062d17b26b"},"taskName":{"paramName":"taskName","paramValue":null}},"extraCondition":"1 = 1","recordStart":-1,"pageSize":-1}]}};
					json.data.selectDatas[0].conditionParams.loginUserId.paramValue=usedAccountInfo.userId;
					json.data.selectDatas[0].pageSize=15;
					json.data.selectDatas[0].recordStart=1;
					var jsonStr = encodeURI(JSON.stringify(json));
					$.ajax({
						type: 'POST',
						url: ip+"module-operation!executeOperation?moduleId=5de9264496ed421083f487f7dee1ac54",
						data: {
							  'moduleId':'5de9264496ed421083f487f7dee1ac54',
							  'operation':'Find',
							  'ajaxRequest':'true',
							  'token':jsonStr
						},
						success: function(result){
							 var param = result.data.resultDatas[0].datas
							  //console.log(JSON.stringify(result))
							  console.log(JSON.stringify(result.data.resultDatas[0].datas))
							  var listPage = mui.openWindow({
							  	url:'listParent.html',
							  	id:'listParent',
							  	extras:{
							  		listInfo:param,
							  		status:'daiban'
							  	},
							  	show: { //控制打开页面的类型
									autoShow: true,
									//页面loaded事件发生后自动显示，默认为true 
									aniShow: 'slide-in-right', //页面显示动画，默认为”slide-in-right“；  页面出现的方式 左右上下
									duration: '100' //页面动画持续时间，Android平台默认100毫秒，iOS平台默认200毫秒； 
								}
							  });
						},
						error:function(ms){
							mui.toast("网络出错");
						},
						dataType: "json"
					});	
				}, false);
			}, false);
			

			function TransmissionTemplateDemo() {
				var template = new TransmissionTemplate({
					appId: APPID,
					appKey: APPKEY,
					transmissionType: 1,
					transmissionContent: '测试离线'
				});
				//iOS推送需要设置的pushInfo字段
				//var payload = new APNPayload();
				//var alertMsg = new SimpleAlertMsg();
				//alertMsg.alertMsg="AlertMsg";
				//payload.alertMsg = alertMsg;
				//payload.badge=5;
				//payload.contentAvailable =1;
				//payload.category="ACTIONABLE";
				//payload.sound="test1.wav";
				//payload.customMsg.payload1="payload";
				//template.setApnInfo(payload);
				return template;
			}

			mui.plusReady(function() {
				$('#mask').hide();
				console.log(plus.runtime.version)
				//检查是否有新版本
				$.ajax({
				    type: 'POST',
				    url: ip2+"app/appVersion",
				    data: {
				    },
				    success: function(result){
				    	//console.log(JSON.stringify(result))
					 	if(result.version != plus.runtime.version){
					 		if(plus.os.name=="Android"){
								mui.confirm('有新版本，请在wifi条件下更新','提示',['确定','取消'],function(e){
									if(e.index==0){
										console.log('yesx')
										var url=ip2+"appupload/ntej.apk"; // 下载文件地址
										var dtask = plus.downloader.createDownload( url, {method:"GET"});
										dtask.start(); 
									    dtask.addEventListener( "statechanged", function(task,status){
								    	if(!dtask){return;}
								    	switch(task.state) {
								    		case 1: // 开始
								    			console.log( "开始下载" );
								    		break;
								    		case 2: // 已连接到服务器
								    			console.log( "链接到服务器" );
								    		break;
								    		case 3:	// 已接收到数据
												$('#mask').show();
												var m=Math.floor(task.downloadedSize/task.totalSize*100);
												mui('#demo1').progressbar({progress:m}).show();
												$('#mask p').html('下载中，请稍等('+m+'%)')
								    		break;
								    		case 4:	// 下载完成
								    			console.log( "下载完成！" );
								    			plus.runtime.install(task.filename);
								    			//outLine( task.totalSize );
								    		break;
								    	}
									    } );
										
									}else{
										plus.runtime.quit();
									}
								},'div')
							}else{
								loginBefore()
//								mui.alert('请到App Store更新软件','提示','确定',function(event){
//									plus.runtime.quit();
//								},'div')
							}
					 	}else{
					 		loginBefore()
					 	}
				    },
				    dataType: "json",
				    error:function(){
				    	mui.toast('请检查网络');
				    }
				});
				function loginBefore(){
					var usedAccountInfo; //系统当前使用的身份
					var username, pwd;
					//如果记住我被点击，则在用户名和密码上显示纪录的用户名和密码
					if(plus.storage.getItem("rempsd") == "true") {
						$("#rempsd").addClass('mui-active');
						$("#account").val(plus.storage.getItem("user"));
						$("#password").val(plus.storage.getItem("pwd"));
					}
					if(plus.storage.getItem("autoLogin") == "true") {
						$("#autoLogin").addClass('mui-active');
						$("#account").val(plus.storage.getItem("user"));
						$("#password").val(plus.storage.getItem("pwd"));
					}
					//如果记住我被点击，则在用户名和密码上出现纪录的用户名和密码	
					//自动登录	
					if(plus.storage.getItem("autoLogin") == "true") {
						if(plus.networkinfo.getCurrentType() == plus.networkinfo.CONNECTION_NONE) {
							mui.toast("网络异常，请检查网络设置！");
						} else {
							username = $("#account").val();
							pwd = $("#password").val();
							login();
						}
					}
					//自动登录	
					//登陆点击事件
					$("#login").on("click", function() {
						username = $("#account").val();
						pwd = $("#password").val();
						//判断是否有输入密码和账号
						if(username == '') {
							mui.toast('请输入账号')
						} else if(pwd == '') {
							mui.toast('请输入密码')
						} else {
							if($('#rempsd').hasClass('mui-active')) {
								//check1表示记住我被选择
								plus.storage.setItem("rempsd", "true");
								//user表示把用户名存到手机里
								plus.storage.setItem("user", username);
								//pwd表示把用户名的密码存到手机里
								plus.storage.setItem("pwd", pwd);
							}
							else {
								plus.storage.removeItem("rempsd");
							}
							//自动登陆
							if($('#autoLogin').hasClass('mui-active')) {
								//check2表示自动登录被选择
								plus.storage.setItem("autoLogin", "true");
								//user表示把用户名存到手机里
								plus.storage.setItem("user", username);
								//pwd表示把用户名的密码存到手机里
								plus.storage.setItem("pwd", pwd);
								mui.toast("下次将自动登录");
							} else {
								plus.storage.removeItem("autoLogin");
							}
							login();
						}
					});
				
					//登陆点击事件
					function login() {
						var loginName = username; //'dingdongsheng' //zhuhuajun
						var password = pwd;
						var pwdMd5 = b64_md5(password) + '==';
					 	//第一步获取密码的加密格式
						var loginPWD = '{"data":{"expression":"EncryptionFunc(\\\"MD5\\\",\\\"ntejtoone\\\")"}}';
						loginPWD = encodeURI(loginPWD);
						$.ajax({
							  type: 'POST',
							  url: ip+"module-operation!executeOperation?moduleId=84a6dde8f18c4d7896683e50aa8625be",
							  data: {
								  'moduleId':'84a6dde8f18c4d7896683e50aa8625be',
								  'operation':'WebExecuteFormulaExpression',
								  'ajaxRequest':'true',
								  'token':loginPWD
							  },
							  success: function(result){
								  $("#resultArea").val(JSON.stringify(result));
								  //获取过期时间
								  var sysDateStr = '{"data":{"keyParams":[{"key":"systemCurrentTime","params":["yyyy-MM-dd"]}],"moduleId":"84a6dde8f18c4d7896683e50aa8625be"}}';
								  sysDateStr = encodeURI(sysDateStr);
									$.ajax({
										  type: 'POST',
										  url: ip+"module-operation!executeOperation?moduleId=84a6dde8f18c4d7896683e50aa8625be",
										  data: {
											  'moduleId':'84a6dde8f18c4d7896683e50aa8625be',
											  'operation':'SystemConstant',
											  'ajaxRequest':'true',
											  'token':sysDateStr
										  },
										  success: function(result){
											 // console.log('sldj:'+JSON.stringify(result));
											 var time = result.data[0].value;
											 deadline(time);
									
										  },
										  dataType: "json",
										  error:function(){
										  	mui.toast('网络出错')
										  }
										});
							  },
							  dataType: "json",
							  error:function(){
							  	mui.toast('请检查网络')
							  }
							}); 
						function deadline(deadline){
							var tempAccount, tempOrg;
							var loginResult;
							var findTempAccountParam = {
								"data": {
									"selectDatas": [{
										"queryMode": "table",
										"dataSource": "tmp_account",
										"name": ["sys_Account"],
										"field": ["account", "manageOrgId", "manageOrgName", "manageOrgNo"],
										"condition": "(  account  =  :sys_Account_account_0_CONDITION_KEY_SUFFIX and  pwd  =  :sys_Account_pwd_1_CONDITION_KEY_SUFFIX and  (  expireDate  >  :sys_Account_expireDate_2_CONDITION_KEY_SUFFIX or  expireDate  is  null  ) and  ISNULL(noUse, 0)  =  :sys_Account_noUse_4_CONDITION_KEY_SUFFIX )",
										"valueParamMap": {
											"sys_Account_account_0_CONDITION_KEY_SUFFIX": "admin",
											"sys_Account_pwd_1_CONDITION_KEY_SUFFIX": "M4qzANOXhvesnD4w9Xs+yA==",
											"sys_Account_expireDate_2_CONDITION_KEY_SUFFIX": "2017-09-11",
											"sys_Account_noUse_4_CONDITION_KEY_SUFFIX": false
										}
									}]
								}
							};
							var findTempOrgParam = {
								"data": {
									"selectDatas": [{
										"queryMode": "custom",
										"dataSource": "tmp_userOrg",
										"queryFrom": "NAME",
										"selectExpression": "Query_sys_UserAndOrg",
										"conditionParams": {
											"account": {
												"paramName": "account",
												"paramValue": "admin"
											}
										},
										"extraCondition": "1 = 1",
										"recordStart": -1,
										"pageSize": -1
									}]
								}
							};
							var loginParam = {
								"data": {
									"queryName": "Query_sys_UserLogin",
									"userInfo": {
										"Account": "000adminUserId",
										"AccountObject": "0c9c8a34873448f5bd6cbd1651c06aa7",
										"AccountField": "11e37e5b79904f5a9d67f25ba9328e84",
										"UserObject": "0c9c8a34873448f5bd6cbd1651c06aa7"
									},
									"queryParam": [{
										"isPassword": "False",
										"paramName": "account",
										"paramValue": "admin"
									}, {
										"isPassword": "True",
										"paramName": "pwd",
										"paramValue": "ntejtoone"
									}]
								}
							};
		
							//var jsonStr = '{"data":{"selectDatas":[{"queryMode":"table","dataSource":"tmp_account","name":["sys_Account"],"field":["account","manageOrgId","manageOrgName","manageOrgNo"],"condition":"(  account  =  :sys_Account_account_0_CONDITION_KEY_SUFFIX and  pwd  =  :sys_Account_pwd_1_CONDITION_KEY_SUFFIX and  (  expireDate  >  :sys_Account_expireDate_2_CONDITION_KEY_SUFFIX or  expireDate  is  null  ) and  ISNULL(noUse, 0)  =  :sys_Account_noUse_4_CONDITION_KEY_SUFFIX )","valueParamMap":{"sys_Account_account_0_CONDITION_KEY_SUFFIX":"admin","sys_Account_pwd_1_CONDITION_KEY_SUFFIX":"M4qzANOXhvesnD4w9Xs+yA==","sys_Account_expireDate_2_CONDITION_KEY_SUFFIX":"2017-09-02","sys_Account_noUse_4_CONDITION_KEY_SUFFIX":false}}]}}';
							//findTempAccountParam.data.selectDatas[0].valueParamMap = {"sys_Account_account_0_CONDITION_KEY_SUFFIX":"admin","sys_Account_pwd_1_CONDITION_KEY_SUFFIX":"M4qzANOXhvesnD4w9Xs+yA==","sys_Account_expireDate_2_CONDITION_KEY_SUFFIX":"2017-09-02","sys_Account_noUse_4_CONDITION_KEY_SUFFIX":false}
							findTempAccountParam.data.selectDatas[0].valueParamMap.sys_Account_account_0_CONDITION_KEY_SUFFIX = loginName;
							findTempAccountParam.data.selectDatas[0].valueParamMap.sys_Account_pwd_1_CONDITION_KEY_SUFFIX = pwdMd5;
							findTempAccountParam.data.selectDatas[0].valueParamMap.sys_Account_expireDate_2_CONDITION_KEY_SUFFIX = deadline; //过期日期，从服务器获取
							findTempAccountParam.data.selectDatas[0].valueParamMap.sys_Account_noUse_4_CONDITION_KEY_SUFFIX = false;
							var findTempAccountParamStr = encodeURI(JSON.stringify(findTempAccountParam));
							findTempAccountParamStr = findTempAccountParamStr.replace(/\+/g, '%2B');
							$.ajax({
								type: 'POST',
								url: ip + "module-operation!executeOperation?moduleId=84a6dde8f18c4d7896683e50aa8625be",
								data: {
									'moduleId': '84a6dde8f18c4d7896683e50aa8625be',
									'operation': 'Find',
									'ajaxRequest': 'true',
									'token': findTempAccountParamStr
								},
								success: function(result) {
									//alert(result);
									tempAccount = result;
									plus.storage.setItem('tempAccount', JSON.stringify(tempAccount));
									//var jsonStr = '{"data":{"selectDatas":[{"queryMode":"custom","dataSource":"tmp_userOrg","queryFrom":"NAME","selectExpression":"Query_sys_UserAndOrg","conditionParams":{"account":{"paramName":"account","paramValue":"admin"}},"extraCondition":"1 = 1","recordStart":-1,"pageSize":-1}]}}';
									findTempOrgParam.data.selectDatas[0].conditionParams.account.paramValue = loginName;
									var findTempOrgParamStr = encodeURI(JSON.stringify(findTempOrgParam));
									findTempOrgParamStr = findTempOrgParamStr.replace(/\+/g, '%2B');
									$.ajax({
										type: 'POST',
										url: ip + "module-operation!executeOperation?moduleId=84a6dde8f18c4d7896683e50aa8625be",
										data: {
											'moduleId': ip+'84a6dde8f18c4d7896683e50aa8625be',
											'operation': 'Find',
											'ajaxRequest': 'true',
											'token': findTempOrgParamStr
										},
										success: function(result) {
											//alert(plus.push.getClientInfo().clientid)
											if(plus.push.getClientInfo().clientid != null){
												if(result.data.resultDatas[0].datas.values.length>0){
													var values = result.data.resultDatas[0].datas.values
													tempOrg = result; //返回的多个身份结果
													plus.storage.setItem('tempOrg', JSON.stringify(tempOrg));
													usedAccountInfo = values[0];
													for(var i=0;i<values.length;i++){
														if(values[i].isDefaultLogin){
															usedAccountInfo =values[i];
															break;
														}
													}
													plus.storage.setItem('usedAccountInfo', JSON.stringify(usedAccountInfo));											
													loginParam.data.userInfo.Account = usedAccountInfo.userId;
													loginParam.data.queryParam = [{
														"isPassword": "False",
														"paramName": "account",
														"paramValue": loginName
													}, {
														"isPassword": "True",
														"paramName": "pwd",
														"paramValue": password
													}];
													//jsonStr = encodeURI(jsonStr);
													var loginParamStr = encodeURI(JSON.stringify(loginParam));
													loginParamStr = loginParamStr.replace(/\+/g, '%2B');
													$.ajax({
														type: 'POST',
														url: ip + "module-operation!executeOperation?moduleId=84a6dde8f18c4d7896683e50aa8625be",
														data: {
															'moduleId': '84a6dde8f18c4d7896683e50aa8625be',
															'operation': 'Login',
															'ajaxRequest': 'true',
															'token': loginParamStr
														},
														success: function(result) {
															if(result.success){
																loginResult = result.data;
																plus.storage.setItem('loginResult', JSON.stringify(loginResult));
																getNum()
																tiaozhuan(result);
															}else{
																mui.toast('密码错误')
															}
				
														},
														dataType: "json"
													});
													$.ajax({
														type: 'POST',
														url: ip2 + "app/clientRegister",
														data: {
															'methodTag': 'login',
															'userId': usedAccountInfo.userId,
															'accountId': usedAccountInfo.accountId,
															'clientId': plus.push.getClientInfo().clientid
														},
														success: function(result) {
																console.log(JSON.stringify(result))
														},
														dataType: "json"
													});
												}else{
													mui.toast('请输入正确账号')
												}
											}else{
												mui.toast('网络错误，请重新登录')
											}
										},
										dataType: "json"
									});
								},
								dataType: "json",
								error: function(result) {
									//console.log(JSON.stringify(result));
									mui.toast('网络错误')
								}
							});
						}
					}
					//跳转页面
					function tiaozhuan(param) {
	
						var result = param.success;
						if(result) {
							mui.openWindow({
								url: 'index.html', //需要打开页面的url地址 
								id: 'index', //需要打开页面的url页面id
								styles: {
									top: '0px', //新页面顶部位置 
									bottom: '0px', //新页面底部位置 
									//					width:newpage-width,//新页面宽度，默认为100% 
									//					height:newpage-height,//新页面高度，默认为100% ...... 
								},
								show: { //控制打开页面的类型
									autoShow: true,
									//页面loaded事件发生后自动显示，默认为true 
									aniShow: 'slide-in-right', //页面显示动画，默认为”slide-in-right“；  页面出现的方式 左右上下
									duration: '100' //页面动画持续时间，Android平台默认100毫秒，iOS平台默认200毫秒； 
								},
								extras: {
									//param:param
								}
							});
							console.log("close login");
							plus.webview.close('login','none');
						}
					}
				}
			})
		</script>
	</body>

</html>